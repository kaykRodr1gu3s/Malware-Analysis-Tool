import requests
import csv
import os

class MITRE_ATTACK:
    def __init__(self, API_KEY, file_name):
        """
        Api key must be your virustotal api, pass as argument       
        as second argument, put the file.exe name(example python-3.11.5-amd64.exe)
        """
        print('In init')
        print('-=' * 20)

        self.API_KEY = API_KEY
        self.base_endpoint = 'https://www.virustotal.com/'
        self.file_name = file_name

    def getting_sha256(self):
        params = {
            'apikey': self.API_KEY,
        }
        path = os.getcwd()+'\\' + self.file_name 
        files = {'file': (f'{self.file_name}', open(path, 'rb'))}
        response = requests.post(self.base_endpoint + 'vtapi/v2/file/scan', files=files, params=params)
        data = response.json()        
        identifier = data['sha256']

        return identifier   
    
    
    def Mitre(self, identifier):
        headers = {
        "accept": "application/json",
        "x-apikey": self.API_KEY
                    }
        response = requests.get(self.base_endpoint + f'api/v3/files/{identifier}/behaviour_mitre_trees', headers=headers)
        json = response.json()
        json_response = json['data']
        return json_response
        
    def parsing(self, instance):         
        sandboxes = []
        tat_tech = []  
        for key in instance:
            sandboxes.append(key)
        for sandbox in sandboxes:

            data_json = instance[sandbox]
            data_json = data_json['tactics']
            
            for value in data_json:    
    
                both_tat_tech = []
                tactics = []
                Techniques = []
        
                tactics.append(value['name'])
                tactics.append(value['id'])
                tactics.append(value['link'])
        
                both_tat_tech.append(tactics)        
    
                value = value['techniques']
                        
                for tec in value:

                    value = tec
                    Techniques.append(value['name'])
                    Techniques.append(value['id'])
                    Techniques.append(value['link'])
    
                    both_tat_tech.append(Techniques[:])
                    Techniques.clear()
    
                tat_tech.append(both_tat_tech)
        return tat_tech

    def file_behavior(self, id):
        url = f"https://www.virustotal.com/api/v3/files/{id}/behaviour_summary"
        headers = {
            "accept": "application/json",
            "x-apikey": self.API_KEY
        }
        response = requests.get(url, headers=headers)
        datas_for_saved = response.json()

        return datas_for_saved
    

    def creating_file_behavior(self, file_behavior):
        path = os.getcwd() + '\\VirusTotal'

        names = ['files_attribute_changed' ,'files_deleted' ,'processes_created' ,
                'files_opened' ,'registry_keys_set' ,'text_highlighted' ,
                'modules_loaded' ,'registry_keys_opened' ,'ip_traffic' ,
                'processes_tree' ,'memory_dumps' ,'calls_highlighted' ,
                'files_written' ,'files_dropped' ,'command_executions']

        with open(f'{path}\\Behavior\\{file_name}.txt', 'w') as f:
            for name in names:
                f.write('-='* 10 + name.replace('_', ' ') + '-='*20 + '\n')
                f.write(' \n')
                for data in file_behavior['data'][name]:
                    f.write(f'{data}\n')

                f.write(' \n') 

    def creating_csv(self, parsing):
        header = ['Name', 'Techniques/Tactics', 'Link(See on Mitre)']

        path = os.getcwd() + '\\VirusTotal'
        with open(f'{path}\\Csv_files\\{file_name}_MITRE_ATT&CK.csv', 'w', newline='') as f:
            writer = csv.writer(f)
            writer.writerow(header)

            for list in parsing:
                for value in list:
                    writer.writerow(value)
    
    def main(self):

        identifier = self.getting_sha256()
        Mitre = self.Mitre(identifier)
        parsing = self.parsing(Mitre)
        file_behavior = self.file_behavior(identifier)

        print('All the data has been colected')
        print('creating file...')

        self.creating_file_behavior(file_behavior)
        self.creating_csv(parsing)


api_key = str('7a80aef2912e6ef01f07d5496b2bb2be0f164e4cc1bde79e3ee7fd7903df5eca')
file_name = str('python-3.11.0-amd64.exe')
mitre = MITRE_ATTACK(api_key,file_name)
mitre.main()
